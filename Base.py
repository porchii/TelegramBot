import sqlite3
from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import ParseMode, ReplyKeyboardRemove
from io import BytesIO
import config as cfg
from database import ScheduleBot
from newsdata import NewsData

bot = Bot(cfg.TOKEN_API)
dp = Dispatcher(bot)
schedule_bot = ScheduleBot()
newsdata_bot = NewsData()

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —è –°–∏–∞ - —Ç–≤–æ–π —à–∫–æ–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ë—É–¥—É —Ä–∞–¥–∞ –ø–æ–º–æ—á—å! üòä\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –Ω–∞ —á—Ç–æ —è —Å–ø–æ—Å–æ–±–Ω–∞, –≤–≤–µ–¥–∏ /help')
    await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELao9lz0dvx4q1uQJoO2VfTpz1zaeAkAAC8xsAAhSOKUilgjCyi2OkHjQE')
    await bot.delete_message(message.chat.id, message.message_id)

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.answer("<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:</b>\n" \
                         "/start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º.\n" \
                         "/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è.\n" \
                         "/description - –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞\n" \
                         "/get_schedule_class [–ö–ª–∞—Å—Å(–§–æ—Ä–º–∞—Ç: 10.2)] - –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞.\n" \
                         "/get_schedule_teacher [–§.–ò.–û(–§–æ—Ä–º–∞—Ç(–§–∞–º–∏–ª–∏—è_–ò_–û))] - –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É—á–∏—Ç–µ–ª—è.\n" \
                         "/add_subject [–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –í—Ä–µ–º—è, –ü—Ä–µ–¥–º–µ—Ç(–ö–∞–±–∏–Ω–µ—Ç), –£—á–∏—Ç–µ–ª—å, –ö–ª–∞—Å—Å] - –î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n" \
                         "/clear - –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É\n" \
                         "/get_news - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.\n" \
                         "/add_news [–∑–∞–≥–æ–ª–æ–≤–æ–∫] [—Ç–µ–∫—Å—Ç] - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å.\n" \
                         "/clear_news - –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π.", parse_mode=ParseMode.HTML)
    await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELapFlz0me8Z3v44_r3aq8mtn-xxROrgAChR8AAnF-KEiBJKRW6XpGSzQE')
    await bot.delete_message(message.chat.id, message.message_id)

@dp.message_handler(commands=['description'])
async def description(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø - –°–∏–∞, —Ç–≤–æ–π –Ω–∞–¥–µ–∂–Ω—ã–π —à–∫–æ–ª—å–Ω—ã–π –∫–æ–º–ø–∞–Ω—å–æ–Ω –∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. ü§ñ\n\n" \
                         "<b>–§—É–Ω–∫—Ü–∏–∏:</b>\n" \
                         "1. <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b> –Ø –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã —Ç—ã –≤—Å–µ–≥–¥–∞ –±—ã–ª –≤ –∫—É—Ä—Å–µ —Å–≤–æ–∏—Ö –∑–∞–Ω—è—Ç–∏–π.\n"
                         "2. <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö:</b> –¢—ã –±–æ–ª—å—à–µ –Ω–µ —É–ø—É—Å—Ç–∏—à—å –Ω–∏ –æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ! –Ø –±—É–¥—É —Ä–µ–≥—É–ª—è—Ä–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–±—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —É—Ä–æ–∫–∞—Ö –∏ —Å–æ–±—ã—Ç–∏—è—Ö –≤ —à–∫–æ–ª–µ.\n\n" \
                         "–ü—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞, —É—á–∏—Ç–µ–ª—è, –∞ —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —É—Ä–æ–∫ –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º).\n\n" \
                         "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏ /help. –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è —É—á–µ–±–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Å –°–∏–∞! üòä", parse_mode=ParseMode.HTML)
    await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELapRlz0nVHFUTvuAnEsGPFNGbuBTyngACdx8AAm-fIEiZSyIJxulbdjQE')
    await bot.delete_message(message.chat.id, message.message_id)

@dp.message_handler(commands=['get_schedule_class'])
async def get_schedule_class(message: types.Message):
    try:
        class_name = message.get_args()
        if not class_name:
            await message.answer("–Ø –Ω–µ –º–æ–≥—É –≤—ã—Å–ª–∞—Ç—å –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –í—ã –µ–≥–æ –Ω–µ —É–∫–∞–∑–∞–ª–∏!", parse_mode=ParseMode.HTML)
            await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELbgABZdHVHLXsLu4XygYGXzGNXCdLEmsAAl4bAAL5yWFI-Stggz85tSI0BA')
            await bot.delete_message(message.chat.id, message.message_id)
            return
        class_schedule = schedule_bot.get_schedule('class', class_name)

        if not class_schedule:
            await message.answer(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞ {class_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. üò¢", parse_mode=ParseMode.HTML)
            await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELaptlz0ppZknK8J9E1b6dt8-7rb41GwACISQAAofCIUi_1SPKkGeBgzQE')
            await bot.delete_message(message.chat.id, message.message_id)
            return

        formatted_schedule = ""
        current = 0
        for i in range(0, len(class_schedule)):
            if (i == 0 or class_schedule[i - 1][2] != class_schedule[i][2]):
                current += 1
                formatted_schedule += f"\n<b>{current}:</b> {class_schedule[i][3]}({class_schedule[i][4]}) ‚Äì {class_schedule[i][2]}"
            else:
                formatted_schedule += f"\n<b>({current}):</b> {class_schedule[i][3]}({class_schedule[i][4]}) ‚Äì {class_schedule[i][2]}"

        await message.answer(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞ {class_name}:\n{formatted_schedule}", parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELapllz0oyhLzH7Xe3v-QV1wa2EGe_1wACDiIAAu2aIUh7q0_cAVgmTjQE')
        await bot.delete_message(message.chat.id, message.message_id)

    except Exception as e:
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELaptlz0ppZknK8J9E1b6dt8-7rb41GwACISQAAofCIUi_1SPKkGeBgzQE')

@dp.message_handler(commands=['get_schedule_teacher'])
async def get_schedule_teacher(message: types.Message):
    try:
        name = message.get_args()
        if not name:
            await message.answer("–Ø –Ω–µ –º–æ–≥—É –≤—ã—Å–ª–∞—Ç—å –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –í—ã –µ–≥–æ –Ω–µ —É–∫–∞–∑–∞–ª–∏!", parse_mode=ParseMode.HTML)
            await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELbgABZdHVHLXsLu4XygYGXzGNXCdLEmsAAl4bAAL5yWFI-Stggz85tSI0BA')
            await bot.delete_message(message.chat.id, message.message_id)
            return
        class_schedule = schedule_bot.get_schedule('teacher', name)

        if not class_schedule:
            await message.answer(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É—á–∏—Ç–µ–ª—è {name} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. üò¢", parse_mode=ParseMode.HTML)
            await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELaptlz0ppZknK8J9E1b6dt8-7rb41GwACISQAAofCIUi_1SPKkGeBgzQE')
            await bot.delete_message(message.chat.id, message.message_id)
            return

        formatted_schedule = ""
        current = 0
        for i in range(0, len(class_schedule)):
            if (i == 0 or class_schedule[i - 1][2] != class_schedule[i][2]):
                current += 1
                formatted_schedule += f"<b>{current}:</b> {class_schedule[i][3]}({class_schedule[i][5]}) ‚Äì {class_schedule[i][2]}\n"
            else:
                formatted_schedule += f"<b>({current}):</b> {class_schedule[i][3]}({class_schedule[i][5]}) ‚Äì {class_schedule[i][2]}\n"

        formatted_message = f"<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É—á–∏—Ç–µ–ª—è {name}:</b>\n{formatted_schedule}"

        await message.answer(formatted_message, parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELapllz0oyhLzH7Xe3v-QV1wa2EGe_1wACDiIAAu2aIUh7q0_cAVgmTjQE')
        await bot.delete_message(message.chat.id, message.message_id)

    except Exception as e:
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACagIAAxkBAAELaptlz0ppZknK8J9E1b6dt8-7rb41GwACISQAAofCIUi_1SPKkGeBgzQE')

@dp.message_handler(commands=['add_subject'])
async def add_subject(message: types.Message):
    if message.from_user.id in cfg.admins:
        try:
            args = message.get_args().split(', ')
            if len(args) != 5:
                raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: –î–µ–Ω—å, –í—Ä–µ–º—è, –ü—Ä–µ–¥–º–µ—Ç(–ö–∞–±–∏–Ω–µ—Ç), –£—á–∏—Ç–µ–ª—å, –ö–ª–∞—Å—Å")
            day, time, subject, teacher, class_name = args
            schedule_bot.add_subject(day, time, subject, teacher, class_name)
            await message.reply(f"–£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. üëç", parse_mode=ParseMode.HTML)
            await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELaqFlz0uwJpYufw-JYezwOdyqu_vruwACuhcAAp2oKUixWf4JiHIfqjQE')

        except Exception as e:
            await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", parse_mode=ParseMode.HTML)
            await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELaptlz0ppZknK8J9E1b6dt8-7rb41GwACISQAAofCIUi_1SPKkGeBgzQE')
    else:
        await message.answer("–£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. üò†", parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELbgABZdHVHLXsLu4XygYGXzGNXCdLEmsAAl4bAAL5yWFI-Stggz85tSI0BA')
        await bot.delete_message(message.from_user.id, message.message_id)

@dp.message_handler(commands=['clear'])
async def clear(message: types.Message):
    if message.from_user.id in cfg.admins:
        schedule_bot.restore_schedule()
        await message.answer('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é! üóëÔ∏è', parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELaqFlz0uwJpYufw-JYezwOdyqu_vruwACuhcAAp2oKUixWf4JiHIfqjQE')
        await bot.delete_message(message.from_user.id, message.message_id)
    else:
        await message.answer("–£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. üò†", parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELbgABZdHVHLXsLu4XygYGXzGNXCdLEmsAAl4bAAL5yWFI-Stggz85tSI0BA')
        await bot.delete_message(message.from_user.id, message.message_id)

@dp.message_handler(commands=['get_news'])
async def get_news(message: types.Message):
    news = newsdata_bot.get_news()
    if not news:
        await message.answer("–ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç. üò¢", parse_mode=ParseMode.HTML)
        await bot.delete_message(message.chat.id, message.message_id)
    else:
        formatted_news = "\n".join([f"{row[1]}\n\n {row[2]}" for row in news])
        await message.answer(f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: \n\n {formatted_news}", parse_mode=ParseMode.HTML)
        await bot.delete_message(message.chat.id, message.message_id)

@dp.message_handler(commands=['add_news'])
async def add_news_command(message: types.Message):
    if message.from_user.id not in cfg.admins:
        await message.answer("–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. üò†", parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELbgABZdHVHLXsLu4XygYGXzGNXCdLEmsAAl4bAAL5yWFI-Stggz85tSI0BA')
        await bot.delete_message(message.chat.id, message.message_id)
    else:
        args = message.get_args().split(' ', 1)
        if len(args) != 2:
            await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /add_news [–∑–∞–≥–æ–ª–æ–≤–æ–∫] [—Ç–µ–∫—Å—Ç]", parse_mode=ParseMode.HTML)
            await bot.delete_message(message.chat.id, message.message_id)
        else:
            header, text_ = args
            newsdata_bot.add_news(header, text_)
            await message.answer(f"–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞: \n\n–ó–∞–≥–æ–ª–æ–≤–æ–∫: {header}\n–¢–µ–∫—Å—Ç: {text_} üòä", parse_mode=ParseMode.HTML)
            await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELa-ll0HHe-RyvH7qud0DofNiYa_7kkgACuhcAAp2oKUixWf4JiHIfqjQE')
            await bot.delete_message(message.chat.id, message.message_id)

@dp.message_handler(commands='clear_news')
async def clear_news(message: types.Message):
    if message.from_user.id not in cfg.admins:
        await message.answer("–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. üò†", parse_mode=ParseMode.HTML)
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELbgABZdHVHLXsLu4XygYGXzGNXCdLEmsAAl4bAAL5yWFI-Stggz85tSI0BA')
        await bot.delete_message(message.chat.id, message.message_id)
    else:
        newsdata_bot.clear_news()
        await message.answer('–ù–æ–≤–æ—Å—Ç–∏ –æ—á–∏—â–µ–Ω—ã! üóëÔ∏è', parse_mode=ParseMode.HTML);
        await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAELa-ll0HHe-RyvH7qud0DofNiYa_7kkgACuhcAAp2oKUixWf4JiHIfqjQE')
        await bot.delete_message(message.chat.id, message.message_id)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
